{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"lodash\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./components/findWorstStatus.ts","webpack:///./components/comparisonFunctions.ts","webpack:///./components/stats.ts","webpack:///./components/processor.ts","webpack:///./components/getMetricHints.ts","webpack:///./components/NewStatusPanel.tsx","webpack:///./components/rules/types.ts","webpack:///./components/rules/RuleItem.tsx","webpack:///../node_modules/uuid/dist/esm-browser/native.js","webpack:///../node_modules/uuid/dist/esm-browser/rng.js","webpack:///../node_modules/uuid/dist/esm-browser/stringify.js","webpack:///../node_modules/uuid/dist/esm-browser/v4.js","webpack:///./components/rules/RuleEditor.tsx","webpack:///./const.ts","webpack:///./module.ts","webpack:///./components/getColorByState.ts","webpack:///./components/displaySeriesData.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { RuleItemType } from '../components/rules/types';\r\nimport { MetricHint } from 'types';\r\n\r\n\r\nexport function findWorstStatus(metricHints: MetricHint[], rules: RuleItemType[]) {\r\n\r\n  const statusOrder = ['information', 'warning', 'average', 'high', 'disaster'];\r\n  let worstStatusIndex = -1;\r\n  //console.log(\"metricHints: \",metricHints);\r\n  if (!rules) { return worstStatusIndex >= 0 ? statusOrder[worstStatusIndex] + '-state' : 'ok-state'; }\r\n  for (const rule of rules) {\r\n    let series;\r\n    for (const hint of metricHints) {\r\n      if (hint.label === rule.seriesMatch) {\r\n        series = hint;\r\n        break;\r\n      }\r\n    }\r\n   \r\n    if (!series) {continue;}\r\n    //console.log(\"rule: \", rule)\r\n    const value = series.value;\r\n    if (rule.displayMode === 'number' && rule.numberThreshold) {\r\n      for (const [status, threshold] of Object.entries(rule.numberThreshold)) {\r\n        if (threshold !== null) {\r\n          if (status === 'showOnlyOnThreshold') {continue;}\r\n          if (typeof value === 'number' && ( rule.revers ? (value <= parseFloat(threshold)) : (value >= parseFloat(threshold)))) {\r\n            const statusIndex = statusOrder.indexOf(status);\r\n            if (statusIndex > worstStatusIndex) {\r\n              worstStatusIndex = statusIndex;\r\n            }\r\n          }\r\n        }  \r\n      }\r\n    } else if (rule.displayMode === 'string' && rule.stringThreshold) {\r\n      for (const [status, statusValue] of Object.entries(rule.stringThreshold)) {\r\n        if (String(value) === statusValue) {\r\n          const statusIndex = statusOrder.indexOf(status);\r\n          if (statusIndex > worstStatusIndex) {\r\n            worstStatusIndex = statusIndex;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //console.log(\"worstStatusIndex:\", worstStatusIndex);\r\n  return worstStatusIndex >= 0 ? statusOrder[worstStatusIndex] + '-state' : 'ok-state';\r\n}\r\n\r\n\r\n","interface Operators {\r\n  [key: string]: (a: any, b: any) => boolean;\r\n}\r\n  \r\nconst operators: Operators = {\r\n  'eq': (a: any, b: any) => a === b,\r\n  'ne': (a: any, b: any) => a !== b,\r\n  'ge': (a: any, b: any) => a > b,\r\n  'lt': (a: any, b: any) => a < b,\r\n};\r\n  \r\nexport function compareValues(value1: any, value2: any, operator: string) {\r\n  const operation = operators[operator];\r\n  return operation ? operation(value1, value2) : false;\r\n}\r\n\r\n","import { FieldCalcs } from '@grafana/data';\nimport { MetricsModel } from 'types';\n\nexport function GetValueByOperator(\n  metricName: string,\n  data: MetricsModel | null,\n  operatorName: string,\n  calcs: FieldCalcs\n) {\n  switch (operatorName) {\n    case 'name':\n      return metricName;\n    case 'last_time':\n      if (data) {\n        return data.timestamp;\n      } else {\n        return Date.now();\n      }\n    default:\n      let aValue = calcs[operatorName];\n      return aValue;\n  }\n}\n\n","import { MetricsModel } from 'types';\r\nimport { InsertTime } from './deframer';\r\nimport { GetValueByOperator } from './stats';\r\nimport { PanelData, DataFrame, Field, FieldType, reduceField, getFieldDisplayName, getValueFormat, formattedValueToString } from '@grafana/data';\r\n\r\nexport function ProcessDataFrames(\r\n    data: PanelData,\r\n    globalOperator: string,\r\n  ): MetricsModel[] {\r\n    // check if data contains a field ca  lled Time of type time\r\n    let processedData = InsertTime(data.series);\r\n    let internalData = [] as MetricsModel[];\r\n    // just one for now...\r\n    processedData.map((item) => {\r\n      const models = DataFrameToMetrics(item, globalOperator);\r\n      for (const aModel of models) {\r\n        internalData.push(aModel);\r\n      }\r\n    });\r\n    return internalData;\r\n  }\r\n  \r\n  export function DataFrameToMetrics(frame: DataFrame, globalOperator: string): MetricsModel[] {\r\n  \r\n    const valueFields: Field[] = [];\r\n  \r\n    for (const aField of frame.fields) {\r\n      //console.log(\"aField: \", aField);\r\n      if (aField.type === FieldType.number || aField.type === FieldType.string) {\r\n        valueFields.push(aField);\r\n      }\r\n    }\r\n    const models: MetricsModel[] = [];\r\n  \r\n    for (const valueField of valueFields) {\r\n      const standardCalcs = reduceField({ field: valueField!, reducers: ['bogus'] });\r\n      \r\n      const valueFieldName = getFieldDisplayName(valueField!, frame);\r\n      const operatorValue = GetValueByOperator(valueFieldName, null, globalOperator, standardCalcs);\r\n  \r\n      let maxDecimals = 4;\r\n      if (valueField!.config.decimals !== undefined && valueField!.config.decimals !== null) {\r\n        maxDecimals = valueField!.config.decimals;\r\n      }\r\n      const result = getValueFormat(valueField!.config.unit)(operatorValue, maxDecimals, undefined, undefined);\r\n      const valueFormatted = formattedValueToString(result);\r\n  \r\n      const model: MetricsModel = {\r\n        thresholdLevel: 0,\r\n        value: operatorValue,\r\n        valueFormatted: valueFormatted,\r\n        valueRounded: roundValue(operatorValue, maxDecimals) || operatorValue,\r\n        stats: standardCalcs,\r\n        name: valueFieldName, // aSeries.name,\r\n        displayName: valueFieldName, // aSeries.name,\r\n        timestamp: 0,\r\n        prefix: '',\r\n        suffix: '',\r\n        color: '',\r\n        clickThrough: '',\r\n        operatorName: '',\r\n        newTabEnabled: true,\r\n        sanitizedURL: '',\r\n        sanitizeURLEnabled: true,\r\n        showName: true,\r\n        showValue: true,\r\n        isComposite: false,\r\n        members: [],\r\n      };\r\n      models.push(model);\r\n    }\r\n    return models;\r\n  }\r\n  \r\n  const roundValue = (num: number, decimals: number) => {\r\n    if (num === null) {\r\n      return null;\r\n    }\r\n    const n = Math.pow(10, decimals);\r\n    const formatted = (n * num).toFixed(decimals);\r\n    return Math.round(parseFloat(formatted)) / n;\r\n  };\r\n\r\n","import { DataFrameToMetrics } from './processor'\r\nimport { PanelData } from '@grafana/data';\r\n\r\n\r\ninterface MetricHint {\r\n    label: string;\r\n    value: any;\r\n}\r\n  \r\nexport function getMetricHints(data: PanelData): MetricHint[] {\r\n    const hints: MetricHint[] = [];\r\n    for (const metric of data.series) {\r\n      const hintsValue = DataFrameToMetrics(metric, 'last');\r\n      console.log(hintsValue);\r\n      for (const hintValue of hintsValue) {\r\n        hints.push({\r\n          label: hintValue.name,\r\n          value: hintValue.valueRounded,\r\n        });\r\n      }\r\n    }\r\n    return hints;\r\n}\r\n\r\n// export function getMetricHints(data: PanelData): MetricHint[] {\r\n//   const hints: MetricHint[] = [];\r\n//   for (const metric of data.series) {\r\n//     const hintValue = DataFrameToMetrics(metric, 'last')[0];\r\n//     hints.push({\r\n//       label: hintValue.name,\r\n//       value: hintValue.value,\r\n//     });\r\n//   }\r\n//   return hints;\r\n// }\r\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { NewStatusOptions } from 'types';\nimport { css, cx } from '@emotion/css';\nimport { stylesFactory, Tooltip } from '@grafana/ui';\nimport { findWorstStatus } from './findWorstStatus';\nimport { displaySeriesData } from './displaySeriesData';\nimport { getColorByState } from './getColorByState';\nimport { getMetricHints } from './getMetricHints';\ninterface Props extends PanelProps<NewStatusOptions> {}\n\n\n\nexport const NewStatusPanel: React.FC<Props> = ({ options, data, width, height, id, replaceVariables }) => {\n\n  const styles = getStyles();\n  const [state, setState] = useState<string | null>(null);\n  const [blink, setBlink] = useState(false);\n\n\n  const GlobalPanelState = useMemo(() => {\n    return [];\n  }, []);\n\n  useEffect(() => {\n    setBlink(false);\n    if (options.statePanel === 'enable') { setState(findWorstStatus(getMetricHints(data), options.ruleConfig.rules )); }\n    else if (options.statePanel === 'na') { setState('na-state') }\n    else { setState('disable-state') }\n  }, [data, options.ruleConfig.rules, options.statePanel]);\n  \n\n  useEffect(() => {\n    setBlink(false);\n    if ((GlobalPanelState[id] !== 'not-ok-state') && state === 'ok-state') {\n\t\t\tif (typeof GlobalPanelState[id] !== \"undefined\") {\n\t\t\t\tsetBlink(true);\n\t\t\t}\n      // to be fix..\n      // @ts-ignore\n\t\t\tGlobalPanelState[id] = 'not-ok-state';   \n\t\t} else if ((GlobalPanelState[id] !== 'not-disaster-state') && state === 'disaster-state') {\n\t\t\tif (typeof GlobalPanelState[id] !== \"undefined\") {\n\t\t\t\tsetBlink(true);\n\t\t\t}\n      // to be fix..\n      // @ts-ignore\n\t\t\tGlobalPanelState[id] = 'not-disaster-state';\n\t\t} else if ((GlobalPanelState[id] !== 'not-high-state') && state === 'high-state') {\n\t\t\tif (typeof GlobalPanelState[id] !== \"undefined\") {\n\t\t\t\tsetBlink(true);\n\t\t\t}\n      // to be fix..\n      // @ts-ignore\n\t\t\tGlobalPanelState[id] = 'not-high-state';\n\t\t} else if ((GlobalPanelState[id] !== 'not-average-state') && state === 'average-state') {\n\t\t\tif (typeof GlobalPanelState[id] !== \"undefined\") {\n\t\t\t\tsetBlink(true);\n\t\t\t}\n      // to be fix..\n      // @ts-ignore\n\t\t\tGlobalPanelState[id] = 'not-average-state';\n    } else if ((GlobalPanelState[id] !== 'not-warning-state') && state === 'warning-state') {\n\t\t\tif (typeof GlobalPanelState[id] !== \"undefined\") {\n\t\t\t\tsetBlink(true);\n\t\t\t}\n      // to be fix..\n      // @ts-ignore\n\t\t\tGlobalPanelState[id] = 'not-warning-state';\n    } else if ((GlobalPanelState[id] !== 'not-information-state') && state === 'information-state') {\n\t\t\tif (typeof GlobalPanelState[id] !== \"undefined\") {\n\t\t\t\tsetBlink(true);\n\t\t\t}\n      // to be fix..\n      // @ts-ignore\n\t\t\tGlobalPanelState[id] = 'not-information-state';  \n    }    \n  }, [id, state, GlobalPanelState]);\n  \n\n  const blinkClass = blink && options.blink ? styles.blink : '';\n  const backgroundColor = getColorByState(state ?? '', options);\n  const [displayData, setDisplayData] = useState<Array<{ line: string; tooltip: string; }>>([]);\n  //console.log(displayData);             \n                   \n\n  useEffect(() => {\n    let result = displaySeriesData(getMetricHints(data), options.ruleConfig.rules);\n    setDisplayData(result || []);\n  }, [data, options]);\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        blinkClass,\n        blinkKeyframes,\n        css`\n          width: ${width + 16}px;\n          height: ${height + 16}px;\n\t        text-align: center;\n          overflow: hidden;\n          position: relative;\n          border-radius: 3px;\n          backface-visibility: hidden;\n          transition: transform 0.5s;\n\t        margin: -8px 0 0 -8px;\n          background-color: ${backgroundColor}};\n        `\n      )}\n    >\n      <div className={styles.top_section }>\t\n        <div className={styles.bottom_section}>\n\t        <div className={styles.status_name_row}>\n\t          <h1 style={styles.h1}>\n            {options.dataLink ? (\n              <a style={styles.a} href={replaceVariables(options.dataLink)}>\n                {replaceVariables(options.panelName)}\n              </a>\n            ) : (\n              <span style={styles.a}>{replaceVariables(options.panelName)}</span>\n            )}\n\t          </h1>\n            {options.statePanel === 'enable' ? (\n            <div className={styles.valueMap}>\n              {options.modePanel && options.modePanel === 'in' ? (\n                displayData.map((item, index) => (\n                  <span key={index}>\n                    {item.tooltip ? (\n                      <Tooltip content={<div style={{ whiteSpace: 'pre-wrap' }}>{item.tooltip}</div>}>\n                        <span>\n                         {item.line}\n                        </span>\n                      </Tooltip>\n                    ) : (\n                      <span>\n                        {item.line}\n                      </span>\n                    )}\n                    <span>\n                      {index < displayData.length - 1 ? ' / ' : ''}\n                    </span>\n                  </span>\n                ))\n              ) : (\n                displayData.map((item, index) => (\n                  <div key={index}>\n                    {item.tooltip ? (\n                      <Tooltip content={<div style={{ whiteSpace: 'pre-wrap' }}>{item.tooltip}</div>}>\n                        <span>\n                         {item.line}\n                        </span>\n                      </Tooltip>\n                    ) : (\n                      <span>\n                        {item.line}\n                      </span>\n                    )}\n                  </div>\n                ))\n              )}\n            </div>\n            ) : '' }\n           </div>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    svg: css`\n      position: absolute;\n      top: 0;\n      left: 0;\n    `,\n    textBox: css`\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      padding: 10px;\n    `,\n    valueMap: css`\n      font-size: 0.85em;\n    `,    \n    bottom_section: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-content: center; \n      height: 100%;\n    `,\n    top_section: css`\n      box-sizing: inherit;\n      vertical-align: middle;\n      height: 100%;\n    `,\n    status_name_row: css`\n      color: #080808;\n      overflow:hidden;\n    `,\n    h1: {\n      margin: '0px 0px 0.15em',\n      fontSize: '1.4rem',\n      'padding-top': '3px',\n      'letter-spacing': '-0.01893em',\n    },\n    a: {\n      color: '#080808',\n    },\n    blink: css`\n    animation-name: blinker;\n    animation-iteration-count: infinite;\n    animation-timing-function: cubic-bezier(1.0,2.0,0,1.0);\n    animation-duration: 1s;\n    animation-play-state: running;\n    -webkit-animation-name: blinker;\n    -webkit-animation-iteration-count: infinite;\n    -webkit-animation-play-state: running;\n    -webkit-animation-timing-function: cubic-bezier(1.0,2.0,0,1.0);\n    -webkit-animation-duration: 1s;\n    `,\n   \n  };\n});\n\nconst blinkKeyframes = css`\n  @keyframes blinker {\n    from {\n      opacity: 1.0;\n    }\n    50% {\n      opacity: 0.5;\n    }\n    to {\n      opacity: 1.0;\n    }\n  }\n\n  @-webkit-keyframes blinker {\n    from {\n      opacity: 1.0;\n    }\n    50% {\n      opacity: 0.5;\n    }\n    to {\n      opacity: 1.0;\n    }\n  }\n`;\n\n","\r\nimport { SelectableValue } from '@grafana/data';\r\n\r\n\r\nexport interface RuleMember {}\r\n\r\n\r\nexport const DisplayModes: SelectableValue[] = [\r\n  { value: 'number', label: 'Number threshold' },\r\n  { value: 'string', label: 'String threshold' },\r\n  { value: 'show', label: 'Show only ' },\r\n];\r\n\r\nexport const LogicalModes: SelectableValue[] = [\r\n  { value: 'eq', label: 'Equivalent' },\r\n  { value: 'ne', label: 'Not equivalent' },\r\n  { value: 'ge', label: 'Greater than' },\r\n  { value: 'lt', label: 'Less than' },\r\n];\r\n\r\nexport interface RuleItemType {\r\n  name: string;\r\n  label: string;\r\n  order: number;\r\n  isTemplated: boolean;\r\n  displayMode: string;\r\n  description?: string | '';\r\n  enabled: boolean;\r\n  showName: boolean;\r\n  showValue: boolean;\r\n  showRule: boolean;\r\n  showMembers: boolean;\r\n  showOnlyOnThreshold: boolean;\r\n  revers: boolean;  \r\n  numberThreshold: {\r\n    information: string;\r\n    warning: string;\r\n    average: string;\r\n    high: string;\r\n    disaster: string;\r\n  };\r\n  stringThreshold: {\r\n    information: string;\r\n    warning: string;\r\n    average: string;\r\n    high: string;\r\n    disaster: string;\r\n  };\r\n  clickThrough: string | '';\r\n  clickThroughSanitize: boolean;\r\n  clickThroughOpenNewTab: boolean;\r\n  logicExpress: boolean;\r\n  logicExpressValue: string;\r\n  logicalMode: string; \r\n  seriesMatch: string | '';\r\n  alias?: string | '';\r\n  shortAlias?: string | '';\r\n  ID?: string;\r\n}\r\n\r\nexport interface RuleItemTracker {\r\n  rule: RuleItemType;\r\n  order: number;\r\n  ID: string;\r\n}\r\n\r\nexport interface RuleItemProps {\r\n  rule: RuleItemType;\r\n  ID: string;\r\n  enabled: boolean;\r\n  setter: any;\r\n  remover: any;\r\n  moveUp: any;\r\n  moveDown: any;\r\n  createDuplicate: any;\r\n  context: any;\r\n}\r\n\r\nexport interface RuleMetricItemProps {\r\n  \r\n  index: number;\r\n  disabled: boolean;\r\n  removeMetric: any;\r\n  updateMetric: any;\r\n  updateMetricAlias: any;\r\n  context: any;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { IconName, Input, Select, Field, FieldSet, Switch, Card, IconButton, Cascader, TextArea, CascaderOption } from '@grafana/ui';\r\nimport { DisplayModes, LogicalModes, RuleItemProps, RuleItemType } from './types';\r\n//import { MetricsModel } from 'types';\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { DataFrameToMetrics } from '../processor'\r\nimport { SelectableValue } from '@grafana/data';\r\n//import { SelectableValue, FieldType } from '@grafana/data';\r\n\r\nexport interface MetricsModel {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport const RuleItem: React.FC<RuleItemProps> = (props: RuleItemProps) => {\r\n//  export const RuleItem: React.FC<Props> = ({data, options}) => {\r\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\r\n  const [rule, _setRule] = useState(props.rule);\r\n  const getDisplayMode = (displayMode: string) => {\r\n    const keys = DisplayModes.keys();\r\n    for (const aKey of keys) {\r\n      if (DisplayModes[aKey].value === displayMode) {\r\n        return DisplayModes[aKey];\r\n      }\r\n    }\r\n    // no match, return all by default\r\n    return DisplayModes[0];\r\n  };\r\n  const [displayMode, setDisplayMode] = useState<SelectableValue<any>>(getDisplayMode(props.rule.displayMode));\r\n  \r\n//  console.log(options);\r\n\r\n  const getLogicalMode = (logicalMode: string) => {\r\n    const keys = LogicalModes.keys();\r\n    for (const aKey of keys) {\r\n      if (LogicalModes[aKey].value === logicalMode) {\r\n        return LogicalModes[aKey];\r\n      }\r\n    }\r\n    // no match, return all by default\r\n    return LogicalModes[0];\r\n  };\r\n  const [logicalMode, setLogicalMode] = useState<SelectableValue<any>>(getLogicalMode(props.rule.logicalMode));\r\n//  const [logicalMode, setLogicalMode] = useState<string>(getLogicalMode(props.rule.logicalMode).value);\r\n  const setRule = (value: RuleItemType) => {\r\n    _setRule(value);\r\n    props.setter(rule.order, value);\r\n  };\r\n  const [visibleIcon] = useState<IconName>('eye');\r\n  const [hiddenIcon] = useState<IconName>('eye-slash');\r\n  const removeItem = () => {\r\n    //alert('high');\r\n    props.remover(rule.order);\r\n    // call parent remove function\r\n  };\r\n\r\n  const toggleShowName = () => {\r\n    const currentState = rule.showName;\r\n    //setShowName(!currentState);\r\n    setRule({ ...rule, showName: !currentState });\r\n  };\r\n\r\n  const toggleShowValue = () => {\r\n    const currentShowValue = rule.showValue;\r\n    //setShowName(!currentState);\r\n    setRule({ ...rule, showValue: !currentShowValue });\r\n  };\r\n\r\n  const moveUp = () => {\r\n    props.moveUp(rule.order);\r\n  };\r\n  const moveDown = () => {\r\n    props.moveDown(rule.order);\r\n  };\r\n  const createDuplicate = () => {\r\n    props.createDuplicate(rule.order);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.context.data) {\r\n      let hints: CascaderOption[] = [];\r\n      let metricHints = new Set<string>();\r\n      for (const metric of props.context.data) {\r\n        //console.log(\"DataFrameToMetrics: \",DataFrameToMetrics(metric, props.context.options.globalOperator));\r\n        let hintsValue = DataFrameToMetrics(metric, 'last');\r\n        for (const hintValue of hintsValue) {\r\n          metricHints.add(hintValue.name);          \r\n        }  \r\n      }\r\n      //console.log(\"metricHints: \",metricHints);\r\n      for (const metricName of metricHints) {\r\n        hints.push({\r\n          label: metricName,\r\n          value: metricName,\r\n        });\r\n      }\r\n      setMetricHints(hints);\r\n    }\r\n  }, [props.context.data]);\r\n//}, [props.context.data, props.context.options.globalOperator]);\r\n\r\n  return (\r\n    <Card heading=\"\" key={`rule-card-${props.ID}`}>\r\n      <Card.Meta>        \r\n        <FieldSet>\r\n          <Field label=\"Rule Name\" description=\"Name or Regular Expression\" disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.name}\r\n              placeholder=\"\"\r\n              onChange={(e) => setRule({ ...rule, name: e.currentTarget.value })}\r\n            />\r\n          </Field>\r\n\r\n          <Field label=\"Metric\" style={{ minWidth: '175px' }} >\r\n            <Cascader\r\n              key={`cmi-index-${props.ID}`}\r\n              initialValue={rule.seriesMatch}\r\n              allowCustomValue\r\n              placeholder=\"\"\r\n              options={metricHints}\r\n              onSelect={(val: string) => setRule({ ...rule, seriesMatch: val })} \r\n            />\r\n          </Field>\r\n          <Field label=\"Alias metric name\" description=\"Used as metric name if exists\">\r\n            <Input\r\n              value={rule.alias}\r\n              placeholder=\"\"\r\n              onChange={(e) => setRule({ ...rule, alias: e.currentTarget.value })}\r\n            />\r\n          </Field>\r\n          <Field label=\"Description\" description=\"Used on tooltip if exists\" >\r\n            <TextArea\r\n              value={rule.description}\r\n              placeholder=\"\"\r\n              style={{ resize: 'both' }}\r\n              onChange={(e) => setRule({ ...rule, description: e.currentTarget.value })}\r\n            />\r\n          </Field> \r\n          <Field label=\"Show metric name\" description=\"Toggle Display of metric name\" disabled={!rule.showRule}>\r\n            <Switch\r\n              transparent={true}\r\n              value={rule.showName}\r\n              disabled={!rule.showRule}\r\n              onChange={toggleShowName}\r\n            ></Switch>\r\n          </Field>\r\n          <Field label=\"Show metric value\" description=\"Toggle Display of metric value\" disabled={!rule.showRule}>\r\n            <Switch\r\n              transparent={true}\r\n              value={rule.showValue}\r\n              disabled={!rule.showRule}\r\n              onChange={toggleShowValue}\r\n            />\r\n          </Field>\r\n\r\n          \r\n          <Field\r\n            label=\"Display Mode\"\r\n            description=\"Metric handler type\"\r\n            disabled={!rule.showRule}\r\n          >\r\n            <Select\r\n              menuShouldPortal={true}\r\n              value={displayMode}\r\n              onChange={(v) => {\r\n                setDisplayMode(v);\r\n                setRule({ ...rule, displayMode: v.value });\r\n              }}\r\n              options={DisplayModes}\r\n            />\r\n          </Field>\r\n          { rule.displayMode === 'number' ? (\r\n          <>\r\n          <Field\r\n            label=\"Show only on Threshold\"\r\n            disabled={!rule.showRule}\r\n          >\r\n            <Switch\r\n              transparent={true}\r\n              value={rule.showOnlyOnThreshold}\r\n              disabled={!rule.showRule}\r\n              onChange={() => setRule({ ...rule, showOnlyOnThreshold: !rule.showOnlyOnThreshold, }, )}\r\n            />\r\n          </Field> \r\n          <Field\r\n            label=\"Revers logic\"\r\n            description=\"Inverse processing of values, if processing is needed from the largest to the smallest.\"\r\n            disabled={!rule.showRule}\r\n          >\r\n            <Switch\r\n              transparent={true}\r\n              value={rule.revers}\r\n              disabled={!rule.showRule}\r\n              onChange={() => setRule({ ...rule, revers: !rule.revers, }, )}\r\n            />\r\n          </Field> \r\n          <Field label=\"Information threshold\"  disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.numberThreshold?.information?.toString() ?? ''}\r\n              placeholder=\"1\"\r\n              onChange={(e) => setRule({ ...rule, numberThreshold: { ...rule.numberThreshold, information: e.currentTarget.value.match(/^[\\d.]*$/) ? e.currentTarget.value : rule.numberThreshold?.information ?? null,  }, }) }\r\n            />\r\n          </Field>\r\n          <Field label=\"Warning threshold\"  disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.numberThreshold?.warning?.toString() ?? ''}\r\n              placeholder=\"2\"\r\n              onChange={(e) => setRule({ ...rule, numberThreshold: { ...rule.numberThreshold, warning: e.currentTarget.value.match(/^[\\d.]*$/) ? e.currentTarget.value : rule.numberThreshold?.warning ?? null,  }, }) }\r\n            />\r\n          </Field>                    \r\n          <Field label=\"Average threshold\"  disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.numberThreshold?.average?.toString() ?? ''}\r\n              placeholder=\"3\"\r\n              onChange={(e) => setRule({ ...rule, numberThreshold: { ...rule.numberThreshold, average: e.currentTarget.value.match(/^[\\d.]*$/) ? e.currentTarget.value : rule.numberThreshold?.average ?? null,  }, }) }\r\n            />\r\n          </Field>\r\n          <Field label=\"High threshold\"  disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.numberThreshold?.high?.toString() ?? ''}\r\n              placeholder=\"4\"\r\n              onChange={(e) => setRule({ ...rule, numberThreshold: { ...rule.numberThreshold, high: e.currentTarget.value.match(/^[\\d.]*$/) ? e.currentTarget.value : rule.numberThreshold?.high ?? null,  }, }) }\r\n            />\r\n          </Field>\r\n          <Field label=\"Disaster threshold\" disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.numberThreshold?.disaster ?? ''}\r\n              placeholder=\"5\"\r\n              onChange={(e) => setRule({ ...rule, numberThreshold: { ...rule.numberThreshold, disaster: e.currentTarget.value.match(/^[\\d.]*$/) ? e.currentTarget.value : rule.numberThreshold?.disaster ?? null, }, }) }\r\n              type=\"text\"\r\n              onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n            />\r\n          </Field>\r\n          </>  \r\n          ) : null }\r\n          { rule.displayMode === 'string' ? (\r\n          <>\r\n          <Field\r\n            label=\"Show only on Threshold\"\r\n            disabled={!rule.showRule}\r\n          >\r\n            <Switch\r\n              transparent={true}\r\n              value={rule.showOnlyOnThreshold}\r\n              disabled={!rule.showRule}\r\n              onChange={() => setRule({ ...rule, showOnlyOnThreshold: !rule.showOnlyOnThreshold, }, )}\r\n            />\r\n          </Field>  \r\n\r\n          <Field label=\"Information threshold\" disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.stringThreshold?.information}\r\n              placeholder=\"Information\"\r\n              onChange={(e) => setRule({ ...rule, stringThreshold: { ...rule.stringThreshold, information: e.currentTarget.value, }, }) }\r\n            />\r\n          </Field>\r\n          <Field label=\"Warning threshold\"  disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.stringThreshold?.warning}\r\n              placeholder=\"Warning\"\r\n              onChange={(e) => setRule({ ...rule, stringThreshold: { ...rule.stringThreshold, warning: e.currentTarget.value, }, }) }\r\n            />\r\n          </Field>\r\n          <Field label=\"Average threshold\"  disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.stringThreshold?.average}\r\n              placeholder=\"Average\"\r\n              onChange={(e) => setRule({ ...rule, stringThreshold: { ...rule.stringThreshold, average: e.currentTarget.value, }, }) }\r\n            />\r\n          </Field>\r\n          <Field label=\"High threshold\"  disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.stringThreshold?.high}\r\n              placeholder=\"High\"\r\n              onChange={(e) => setRule({ ...rule, stringThreshold: { ...rule.stringThreshold, high: e.currentTarget.value, }, }) }\r\n            />\r\n          </Field>\r\n          <Field label=\"Disaster threshold\"  disabled={!rule.showRule}>\r\n            <Input\r\n              value={rule.stringThreshold?.disaster}\r\n              placeholder=\"Disaster\"\r\n              onChange={(e) => setRule({ ...rule, stringThreshold: { ...rule.stringThreshold, disaster: e.currentTarget.value, }, }) }\r\n            />\r\n          </Field>\r\n          </>  \r\n          ) : null }\r\n          { rule.displayMode === 'show' ? (\r\n            <>\r\n              <Field label=\"Use logical expressions\" disabled={!rule.showRule}>\r\n                <Switch\r\n                  transparent={true}\r\n                  value={rule.logicExpress}\r\n                  disabled={!rule.showRule}\r\n                  onChange={() => setRule({ ...rule, logicExpress: !rule.logicExpress })}\r\n                ></Switch>\r\n              </Field>\r\n            \r\n              { rule.logicExpress ? (\r\n                <>\r\n                  <Field\r\n                    label=\"Logical Mode\"\r\n                    disabled={!rule.showRule}\r\n                  >\r\n                    <Select\r\n                      menuShouldPortal={true}\r\n                      value={logicalMode}\r\n                      onChange={(v) => {\r\n                        setLogicalMode(v);\r\n                        setRule({ ...rule, logicalMode: v.value });\r\n                      }}\r\n                      options={LogicalModes}\r\n                    />\r\n                  </Field>\r\n                  <Field label=\"Value\" disabled={!rule.showRule}>\r\n                    <Input\r\n                      value={rule.logicExpressValue}\r\n                      placeholder=\"100500\"\r\n                      onChange={(e) => setRule({ ...rule, logicExpressValue: e.currentTarget.value }) }\r\n                    />\r\n                  </Field>\r\n                </>\r\n              ) : null }\r\n            </>\r\n          ) : null }\r\n \r\n         \r\n\r\n        </FieldSet>          \r\n      </Card.Meta>\r\n      <Card.Actions>\r\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\r\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\r\n        <IconButton\r\n          key=\"showRule\"\r\n          name={rule.showRule ? visibleIcon : hiddenIcon}\r\n          tooltip=\"Hide/Show Rule\"\r\n          onClick={() => setRule({ ...rule, showRule: !rule.showRule })}\r\n        />\r\n        <IconButton key=\"copyRule\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\r\n        <IconButton\r\n          key=\"deleteRule\"\r\n          variant=\"destructive\"\r\n          name=\"trash-alt\"\r\n          tooltip=\"Delete Rule\"\r\n          onClick={removeItem}\r\n        />\r\n      </Card.Actions>\r\n    </Card>\r\n  );\r\n};\r\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, { useState } from 'react';\r\nimport { StandardEditorProps } from '@grafana/data';\r\nimport { Button, Collapse } from '@grafana/ui';\r\n\r\nimport { RuleItem } from './RuleItem';\r\nimport { DisplayModes, RuleItemType, RuleItemTracker, LogicalModes } from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport interface RuleEditorSettings {\r\n  rules: RuleItemType[];\r\n  enabled: boolean;\r\n  animationSpeed: string;\r\n}\r\n\r\ninterface Props extends StandardEditorProps<string | string[] | null, RuleEditorSettings> {}\r\n\r\n\r\nexport const RuleEditor: React.FC<Props> = ({ context, onChange }) => {\r\n  const [settings] = useState(context.options.ruleConfig);\r\n//  const [rulesEnabled, _setRulesEnabled] = useState(context.options.ruleConfig.enabled);\r\n  const [tracker, _setTracker] = useState((): RuleItemTracker[] => {\r\n    if (!settings.rules) {\r\n      const empty: RuleItemTracker[] = [];\r\n      return empty;\r\n    }\r\n    const items: RuleItemTracker[] = [];\r\n    settings.rules.forEach((value: RuleItemType, index: number) => {\r\n      items[index] = {\r\n        rule: value,\r\n        order: index,\r\n        ID: uuidv4(),\r\n      };\r\n    });\r\n    return items;\r\n  });\r\n\r\n  const setTracker = (v: RuleItemTracker[]) => {\r\n    _setTracker(v);\r\n    // update the panel config (only the rules themselves, not the tracker)\r\n    const allRules: RuleItemType[] = [];\r\n    v.forEach((element) => {\r\n      allRules.push(element.rule);\r\n    });\r\n    const ruleConfig = {\r\n      rules: allRules,\r\n    };\r\n    onChange(ruleConfig as any);\r\n  };\r\n\r\n  // tracks rule card collapse state\r\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\r\n    if (!tracker) {\r\n      const empty: boolean[] = [];\r\n      return empty;\r\n    }\r\n    let size = tracker.length;\r\n    const openStates: boolean[] = [];\r\n    while (size--) {\r\n      openStates[size] = false;\r\n    }\r\n    return openStates;\r\n  });\r\n\r\n  // generic move\r\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\r\n    if (newIndex >= arr.length) {\r\n      let k = newIndex - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\r\n  };\r\n\r\n  const moveDown = (index: number) => {\r\n    if (index !== tracker.length - 1) {\r\n      arrayMove(tracker, index, index + 1);\r\n      // reorder\r\n      for (let i = 0; i < tracker.length; i++) {\r\n        tracker[i].order = i;\r\n        tracker[i].rule.order = i;\r\n      }\r\n      setTracker([...tracker]);\r\n    }\r\n  };\r\n\r\n  const moveUp = (index: number) => {\r\n    if (index > 0) {\r\n      arrayMove(tracker, index, index - 1);\r\n      // reorder\r\n      for (let i = 0; i < tracker.length; i++) {\r\n        tracker[i].order = i;\r\n        tracker[i].rule.order = i;\r\n      }\r\n      setTracker([...tracker]);\r\n    }\r\n  };\r\n\r\n  const createDuplicate = (index: number) => {\r\n    const original = tracker[index].rule;\r\n    const order = tracker.length;\r\n    const aRule: RuleItemType = {\r\n      name: `${original.name} Copy`,\r\n      label: `${original.name} Copy`,\r\n      order: order,\r\n      isTemplated: original.isTemplated,\r\n      displayMode: original.displayMode,\r\n      enabled: original.enabled,\r\n      showName: original.showName,\r\n      showValue: original.showValue,\r\n      showRule: original.showRule,\r\n      showMembers: original.showMembers,\r\n      logicExpress: original.logicExpress,\r\n      logicExpressValue: original.logicExpressValue,\r\n      clickThrough: original.clickThrough,\r\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\r\n      clickThroughSanitize: original.clickThroughSanitize,\r\n      alias: original.alias,\r\n      description: original.alias,\r\n      shortAlias: original.shortAlias,\r\n      seriesMatch: original.seriesMatch,\r\n      logicalMode: original.logicalMode,\r\n      numberThreshold: original.numberThreshold,\r\n      stringThreshold: original.stringThreshold,\r\n      showOnlyOnThreshold: original.showOnlyOnThreshold,\r\n      revers: original.revers,      \r\n    };\r\n    const aTracker: RuleItemTracker = {\r\n      rule: aRule,\r\n      order: order,\r\n      ID: uuidv4(),\r\n    };\r\n    setTracker([...tracker, aTracker]);\r\n    setIsOpen([...isOpen, true]);\r\n  };\r\n\r\n  const updateRule = (index: number, value: RuleItemType) => {\r\n    tracker[index].rule = value;\r\n    setTracker([...tracker]);\r\n  };\r\n\r\n  const removeRule = (ruleIndex: number) => {\r\n    // find the rule by the ruleIndex\r\n    const allRules = [...tracker];\r\n    let removeIndex = 0;\r\n    for (let i = 0; i < allRules.length; i++) {\r\n      if (allRules[i].order === ruleIndex) {\r\n        removeIndex = i;\r\n        break;\r\n      }\r\n    }\r\n    allRules.splice(removeIndex, 1);\r\n    // reorder\r\n    for (let i = 0; i < allRules.length; i++) {\r\n      allRules[i].order = i;\r\n    }\r\n    setTracker([...allRules]);\r\n  };\r\n\r\n  const toggleOpener = (index: number) => {\r\n    const toggleState = [...isOpen];\r\n    toggleState[index] = !toggleState[index];\r\n    setIsOpen([...toggleState]);\r\n  };\r\n\r\n  const addItem = () => {\r\n    const order = tracker.length;\r\n    const aRule: RuleItemType = {\r\n      name: `Rule-${order}`,\r\n      label: `Rule-${order}`,\r\n      showName: true,\r\n      showValue: true,\r\n      showMembers: false,\r\n      showOnlyOnThreshold: false,\r\n      revers: false,      \r\n      numberThreshold: {\r\n        information: '',\r\n        warning: '',\r\n        average: '',\r\n        high: '',\r\n        disaster: '',\r\n      },\r\n      stringThreshold: {\r\n        information: '',\r\n        warning: '',\r\n        average: '',\r\n        high: '',\r\n        disaster: '',\r\n      },\r\n      logicExpress: false,\r\n      logicalMode: LogicalModes[0].value,\r\n      logicExpressValue: '',\r\n      showRule: true,\r\n      isTemplated: false,\r\n      enabled: true,\r\n      displayMode: DisplayModes[0].value,\r\n      clickThrough: '',\r\n      clickThroughOpenNewTab: true,\r\n      clickThroughSanitize: true,\r\n      order: order,\r\n      alias: '',\r\n      description: '',\r\n      shortAlias: '',\r\n      seriesMatch: '',\r\n    };\r\n    const aTracker: RuleItemTracker = {\r\n      rule: aRule,\r\n      order: order,\r\n      ID: uuidv4(),\r\n    };\r\n    setTracker([...tracker, aTracker]);\r\n    // add an opener also\r\n    setIsOpen([...isOpen, true]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <Button style={{ marginBottom: '16px' }} fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\r\n        Add Rule\r\n      </Button>\r\n      {tracker &&\r\n        tracker.map((item: RuleItemTracker, index: number) => {\r\n          return (\r\n            <Collapse\r\n              key={`collapse-item-index-${item.ID}`}\r\n              label={item.rule.name}\r\n              isOpen={isOpen[index]}\r\n              onToggle={() => toggleOpener(index)}\r\n              collapsible\r\n            >\r\n              <RuleItem\r\n                key={`rule-item-index-${item.ID}`}\r\n                ID={item.ID}\r\n                rule={item.rule}\r\n                enabled={item.rule.enabled}\r\n                setter={updateRule}\r\n                remover={removeRule}\r\n                moveUp={moveUp}\r\n                moveDown={moveDown}\r\n                createDuplicate={createDuplicate}\r\n                context={context}\r\n              />\r\n            </Collapse>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n","export const ColorOK = 'rgba(55, 135, 45, 0.9)';\r\nexport const ColorDisaster = 'rgba(196, 22, 42, 0.9)';\r\nexport const ColorHigh = 'rgba(217, 92, 29, 0.9)';\r\nexport const ColorAverage = 'rgba(250, 100, 0, 0.99)';\r\nexport const ColorWarning = 'rgba(224, 180, 0, 0.99)';\r\nexport const ColorInformation = 'rgba(138, 184, 255, 0.99)';\r\nexport const ColorDisable = 'rgba(128, 128, 128, 0.9)';\r\nexport const ColorNa = 'rgba(20, 60, 120, 0.9)';\r\n","import { PanelPlugin  } from '@grafana/data';\nimport { NewStatusOptions } from './types';\nimport { NewStatusPanel } from './components/NewStatusPanel';\nimport { RuleEditor } from './components/rules/RuleEditor';\nimport { RuleItemType } from './components/rules/types';\nimport * as cfg from './const';\n\nexport const plugin = new PanelPlugin<NewStatusOptions>(NewStatusPanel)\n  .setPanelOptions((builder) => {\n  return builder\n\n    .addTextInput({\n      path: 'panelName',\n      name: 'Panel name',\n      category: ['Overall'],\n      defaultValue: 'ololo panel',\n    })\n    .addRadio({\n      path: 'statePanel',\n      defaultValue: 'enable',\n      name: 'State panel',\n      category: ['Overall'],\n      settings: {\n        options: [\n          {\n            value: 'enable',\n            label: 'Enable',\n          },\n          {\n            value: 'disable',\n            label: 'Disable',\n          },\n          {\n            value: 'na',\n            label: 'N/A',\n          },          \n        ],\n      },\n//      showIf: config => config.showSeriesCount,\n    })\n    .addRadio({\n      path: 'modePanel',\n      defaultValue: 'line',\n      name: 'Mode panel',\n      category: ['Overall'],\n      settings: {\n        options: [\n          {\n            value: 'line',\n            label: 'Line by line',\n          },\n          {\n            value: 'in',\n            label: 'In one line',\n          },    \n        ],\n      },\n//      showIf: config => config.showSeriesCount,\n    })  \n    .addBooleanSwitch({\n      name: 'Blink',\n      path: 'blink',\n      defaultValue: true,\n      category: ['Overall'],\n    })\n\n    .addTextInput({\n      path: 'dataLink',\n      name: 'DataLink',\n      category: ['Overall'],\n      description: 'Used on panel name if exist.\\n\\tExample: d/HQgMW5LVk/new-dashboard?orgId=1&refresh=30s&var-query0=$query0',\n      defaultValue: '',\n    })\n    \n    // .addSelect({\n    //   name: 'Stat',\n    //   path: 'globalOperator',\n    //   description: 'Statistic to display',\n    //   category: ['Overall'],\n    //   defaultValue: OperatorOptions[0].value,\n    //   settings: {\n    //     options: OperatorOptions,\n    //   },\n    // })    \n    .addColorPicker({\n      name: 'OK Color (default: ' + cfg.ColorOK + ')',\n      path: 'ColorOK',\n      category: ['Color'],\n      defaultValue: cfg.ColorOK,\n      showIf: config => config.statePanel === 'enable',\n    })\n    .addColorPicker({\n      name: 'Disable Color (default: ' + cfg.ColorDisable + ')',\n      path: 'ColorDisable',\n      category: ['Color'],\n      defaultValue: cfg.ColorDisable,\n    })\n    .addColorPicker({\n      name: 'Information Color (default: ' + cfg.ColorInformation + ')',\n      path: 'ColorInformation',\n      category: ['Color'],\n      defaultValue: cfg.ColorInformation,\n      showIf: config => config.statePanel === 'enable',\n    })\n    .addColorPicker({\n      name: 'Warning Color (default: ' + cfg.ColorWarning + ')',\n      path: 'ColorWarning',\n      category: ['Color'],\n      defaultValue: cfg.ColorWarning,\n      showIf: config => config.statePanel === 'enable',\n    })\n    .addColorPicker({\n      name: 'Average Color (default: ' + cfg.ColorAverage + ')',\n      path: 'ColorAverage',\n      category: ['Color'],\n      defaultValue: cfg.ColorAverage,\n      showIf: config => config.statePanel === 'enable',\n    })\n    .addColorPicker({\n      name: 'High Color (default: ' + cfg.ColorHigh + ')',\n      path: 'ColorHigh',\n      category: ['Color'],\n      defaultValue: cfg.ColorHigh,\n      showIf: config => config.statePanel === 'enable',\n    })\n    .addColorPicker({\n      name: 'Disaster Color (default: ' + cfg.ColorDisaster + ')',\n      path: 'ColorDisaster',\n      category: ['Color'],\n      defaultValue: cfg.ColorDisaster,\n      showIf: config => config.statePanel === 'enable',\n    })\n    .addColorPicker({\n      name: 'N/A Color (default: ' + cfg.ColorNa + ')',\n      path: 'ColorNa',\n      category: ['Color'],\n      defaultValue: cfg.ColorNa,\n      showIf: config => config.statePanel === 'enable',\n    })\n\n\n     \n  .addCustomEditor({\n    name: 'Rules',\n    id: 'ruleConfig',\n    path: 'ruleConfig',\n    editor: RuleEditor,\n    defaultValue: {\n      rule: [] as RuleItemType[],\n      enabled: true,\n      animationSpeed: '1500',\n    },\n    category: ['Rules'],\n   });\n});\n\n\n","\r\nexport function getColorByState(state: string, options: any) {\r\n    switch (state) {\r\n      case 'ok-state':\r\n        return options.ColorOK;\r\n      case 'disaster-state':\r\n        return options.ColorDisaster;\r\n      case 'high-state':\r\n        return options.ColorHigh;\r\n      case 'average-state':\r\n        return options.ColorAverage;\r\n      case 'warning-state':\r\n        return options.ColorWarning;\r\n      case 'information-state':\r\n        return options.ColorInformation;\r\n      case 'disable-state':\r\n        return options.ColorDisable;\r\n      case 'na-state':\r\n        return options.ColorNa;\r\n      default:\r\n        return 'rgba(0, 0, 0, 0)'; \r\n    }\r\n}\r\n\r\n","import { compareValues } from './comparisonFunctions';\r\nimport { findWorstStatus } from './findWorstStatus';\r\nimport { RuleItemType } from '../components/rules/types';\r\n\r\nimport { MetricHint } from 'types';\r\n\r\n\r\nexport function displaySeriesData(metricHints: MetricHint[], rules: RuleItemType[]) {\r\n\r\n    const labelCounts: { [label: string]: number } = {};\r\n    \r\n    metricHints.forEach((hint) => {\r\n        if (labelCounts[hint.label]) {\r\n            labelCounts[hint.label]++;\r\n        } else {\r\n            labelCounts[hint.label] = 1;\r\n        }\r\n    });\r\n    \r\n    Object.entries(labelCounts).forEach(([label, count]) => {\r\n        if (count > 1) {\r\n            alert(`Warning: multiple metrics with the label \"${label}\" were found.`);\r\n        }\r\n    });\r\n    \r\n    const result = [];\r\n    if (!rules) { return; }\r\n    // const usedLabels = new Set(); \r\n    for (const rule of rules) {\r\n        let series;\r\n        for (const hint of metricHints) {\r\n            //console.log(hint.label);\r\n            if (hint.label === rule.seriesMatch) {\r\n                series = hint;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!series) {continue;}\r\n\r\n        if (series) {\r\n            if (((rule.displayMode === 'number' || rule.displayMode === 'string') && rule.showOnlyOnThreshold) && findWorstStatus( [series] , [rule]) === 'ok-state') { continue }        \r\n            const value = series.value;\r\n            let shouldDisplay = true;\r\n\r\n            if (rule.displayMode === 'show' && rule.logicExpress) {\r\n                shouldDisplay = compareValues(\r\n                    value,\r\n                    rule.logicExpressValue as string,\r\n                    rule.logicalMode\r\n                );\r\n            }   \r\n\r\n            if (shouldDisplay) {\r\n                let line = '';\r\n                if (rule.showName) {\r\n                    if (rule.alias) { line += rule.alias; } else { line += series.label; }\r\n                }\r\n                if (rule.showName && rule.showValue) { line += `: `; }\r\n                if (rule.showValue) { line += value; }\r\n                if (rule.showName || rule.showValue) { \r\n                    result.push({ line, tooltip: ( rule.description ? rule.description : '') });\r\n                }\r\n            }\r\n        }\r\n    }\r\n  return result;\r\n}\r\n\r\n\r\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__644__","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__980__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","findWorstStatus","metricHints","rules","statusOrder","worstStatusIndex","rule","series","hint","label","seriesMatch","displayMode","numberThreshold","status","threshold","entries","revers","parseFloat","statusIndex","indexOf","stringThreshold","statusValue","String","operators","b","compareValues","value1","value2","operator","operation","GetValueByOperator","metricName","data","operatorName","calcs","timestamp","Date","now","DataFrameToMetrics","frame","globalOperator","valueFields","aField","fields","type","FieldType","push","models","valueField","standardCalcs","reduceField","field","reducers","valueFieldName","getFieldDisplayName","operatorValue","maxDecimals","config","decimals","result","getValueFormat","unit","model","thresholdLevel","valueFormatted","formattedValueToString","valueRounded","roundValue","stats","name","displayName","prefix","suffix","color","clickThrough","newTabEnabled","sanitizedURL","sanitizeURLEnabled","showName","showValue","isComposite","members","num","Math","pow","formatted","toFixed","round","getMetricHints","hints","metric","hintsValue","console","log","hintValue","getStyles","stylesFactory","wrapper","css","svg","textBox","valueMap","bottom_section","top_section","status_name_row","h1","margin","fontSize","blink","blinkKeyframes","DisplayModes","LogicalModes","RuleItem","props","setMetricHints","useState","_setRule","setDisplayMode","keys","aKey","getDisplayMode","logicalMode","setLogicalMode","getLogicalMode","setRule","setter","order","visibleIcon","hiddenIcon","useEffect","context","Set","add","Card","heading","ID","FieldSet","Field","description","disabled","showRule","Input","placeholder","onChange","e","currentTarget","style","minWidth","Cascader","initialValue","allowCustomValue","options","onSelect","val","alias","TextArea","resize","Switch","transparent","currentState","currentShowValue","Select","menuShouldPortal","v","showOnlyOnThreshold","toString","information","match","warning","average","high","disaster","onKeyDown","keyCode","preventDefault","logicExpress","logicExpressValue","IconButton","tooltip","onClick","moveUp","moveDown","createDuplicate","variant","remover","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","slice","buf","offset","rnds","random","arr","toLowerCase","unsafeStringify","RuleEditor","settings","ruleConfig","tracker","_setTracker","items","forEach","index","uuidv4","setTracker","allRules","element","isOpen","setIsOpen","size","length","openStates","arrayMove","oldIndex","newIndex","k","splice","original","aTracker","isTemplated","enabled","showMembers","clickThroughOpenNewTab","clickThroughSanitize","shortAlias","updateRule","removeRule","ruleIndex","removeIndex","Button","marginBottom","fill","icon","map","item","Collapse","onToggle","toggleState","toggleOpener","collapsible","ColorOK","ColorDisaster","ColorHigh","ColorAverage","ColorWarning","ColorInformation","ColorDisable","ColorNa","plugin","PanelPlugin","width","height","id","replaceVariables","styles","state","setState","setBlink","GlobalPanelState","useMemo","statePanel","blinkClass","backgroundColor","getColorByState","displayData","setDisplayData","labelCounts","count","alert","shouldDisplay","line","displaySeriesData","div","className","cx","dataLink","href","panelName","span","modePanel","Tooltip","content","whiteSpace","setPanelOptions","builder","addTextInput","path","category","defaultValue","addRadio","addBooleanSwitch","addColorPicker","cfg","showIf","addCustomEditor","editor","animationSpeed"],"sourceRoot":""}